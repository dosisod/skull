#!/bin/sh

usage() {
	echo "skull -v
skull file [ -S | -E | -c ]
           [ -o output ]
           [ -- args]"
	exit 0
}

[ -z "$1" ] && usage

# shift params if the first argument is not an option
case "$1" in
	-*) ;;
	*) filename=$1; shift ;;
esac

while getopts ":vhcSEo:m:" o; do
	case "$o" in
		v)
			printf "\033[92mSkull\033[0m v0.5.0\n"
			exit 0
			;;
		h) usage; exit 0 ;;
		c) COMPILE=true ;;
		S) ASM=true ;;
		E) PREPRO=true ;;
		o) OUT_FILE=$OPTARG ;;
		*) echo "Unknown option \"-$OPTARG\"" ; exit 1 ;;
	esac
done

shift "$(echo "$OPTIND - 1" | bc)"

${0%/*}/_skull "$filename" || exit 1

case "$filename" in
	*".sk") ;;
	*) exit 0 ;;
esac

base=$(dirname "$filename")/.$(basename "$filename")
[ -z "$OUT_FILE" ] && {
	[ -z "$ASM" ] &&
		OUT_FILE=$base.o ||
		OUT_FILE=$base.s;
}

# mimic -E option in cc (print LLVM IR output to screen)
[ ! -z "$PREPRO" ] &&
	cat "$base.ll" &&
	rm "$base.ll" &&
	exit 0

# mimic -S option in cc (output assembly)
file_type=obj
[ -z "$ASM" ] || file_type=asm

LLC=$(command -v llc-10 || command -v llc)
$LLC "$base.ll" -filetype=$file_type -o "$OUT_FILE" || exit 1

rm "$base.ll"

[ -z "$ASM" ] || exit 0

# mimic -c option in cc (compile, but dont link)
[ -z "$COMPILE" ] || exit 0

MODULE_NAME=$(basename "${filename%.*}")
SHIM="int main(void) { extern int x(void) __asm__(\".$MODULE_NAME\"); x(); }"

echo "$SHIM" | cc "$OUT_FILE" \
	-o "${filename%.*}" "$@" \
	-I/usr/include/skull \
	-x c -

rm "$OUT_FILE"
