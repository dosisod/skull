#!/usr/bin/env bash

usage() {
	echo "usage: skull [ -v | file [ -o output ] [ -- args ]]"
	exit 0
}

[ -z "$1" ] && usage

# find -- seperator (if it exists)
sep=$(( $# + 1 ))

for (( i=1; i<=$#; i++ ))
do
	[ "${!i}" == "--" ] && sep=$i
done

if [ "$sep" == "$(( $# + 1 ))" ]; then
	pre="${@:1}"
else
	pre="${@:1:$(($sep - 1))}"
fi

# shift params if the first argument is not an option
case "$1" in
	-*) ;;
	*) filename=$1; shift ;;
esac

while getopts ":vhcSEo:" o; do
	case "$o" in
		v)
			/bin/echo -e "\033[92mSkull $(git describe --tags --abbrev=0)"
			exit 0
			;;
		h) usage; exit 0 ;;
		c) COMPILE=true ;;
		S) ASM=true ;;
		E) PREPRO=true ;;
		o) OUT_FILE=$OPTARG ;;
		*) echo "Unknown option \"$1\"" ; exit 1 ;;
	esac
done

$(dirname $0)/_skull $filename || exit 1

[[ "$filename" =~ ^.*\.sk$ ]] || exit 0

base=$(dirname $filename)/.$(basename $filename)
[ -z "$OUT_FILE" ] && OUT_FILE=$base.o

# mimic -E option in cc (print preproccessor output to screen, in this case, LLVM IR)
if [ ! -z "$PREPRO" ]; then
	cat $base.ll
	rm $base.ll
	exit 1
fi

# mimic -S option in cc (output assembly)
file_type=obj
[ -z "$ASM" ] || file_type=asm

llc-9 $base.ll -filetype=$file_type -o $OUT_FILE || exit 1

if [ ! -z "$ASM" ]; then
	rm $base.ll
	exit 1
fi

rm $base.ll

# mimic -c option in cc (compile, but dont link)
[ -z "$COMPILE" ] || exit 0

cc $OUT_FILE -o "${filename%.*}" "${@:$(($sep))}" -I/usr/include/skull
rm $OUT_FILE