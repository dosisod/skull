# ignored

mut a := 1
a = 2

b := 2

noop

if true {
	mut c := 3
	d := 4
}
elif true {
	noop
}
else {
	unreachable
}
while false {
	noop
}

external f() Int

f()

f2() { noop }

x := 1 + f()

# TODO: disallow "int" and friends from being use as var names C backend
int_ := 1
bool_ := true
float_ := 3.14
rune_ := 'x'
str_ := "hello world"

int_ptr := &int_
bool_ptr := &bool_
float_ptr := &float_
rune_ptr := &rune_
str_ptr := &str_

double_ptr := &int_ptr

alias := Int

deref := * int_ptr

export exported_func() Int { return 1 }

export exported := 1234
export exported2 := exported_func()

testing := exported

return a
